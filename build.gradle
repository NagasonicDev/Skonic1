plugins {
    id 'java'
}

group = 'ca.nagasonic'
version = '1.0.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://repo.skriptlang.org/releases'
    }
    maven {
        name = 'citizens-repo'
        url = 'https://maven.citizensnpcs.co/repo'
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
    //Skript
    implementation 'com.github.SkriptLang:Skript:2.7.3'
    //CitizensAPI
    compileOnly('net.citizensnpcs:citizens-main:2.0.30-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
    //Annotation
    implementation 'org.jetbrains:annotations:24.0.0'
    //ProtocolLib
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.8.0";
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
